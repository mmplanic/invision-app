
//COLORS

$color-white: #ffffff;
$color-black: #000001;
$color-red: #be2020;
$color-shade--light: #676767;
$color-shade--dark: #333333;




//PADDING

$padding-sm: 10px;
$padding-md: 20px;
$padding-lg: 40px; 

//MARGIN



//FONTS

$font-primary: 'Montserrat', sans-serif;
$font-secondary: 'RobotoCondensed', sans-serif;


@font-face {
  font-family: $font-primary;
  src: url("../assets/fonts/Montserrat/Montserrat-Black.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-BlackItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Bold.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-BoldItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-ExtraBold.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-ExtraBoldItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-SemiBold.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-SemiBoldItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Italic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Light.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-LightItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-ExtraLight.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-ExtraLightItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Medium.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-MediumItalic.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Regular.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-Thin.ttf") format('truetype'),
   url("../assets/fonts/Montserrat/Montserrat-ThinItalic.ttf") format('truetype');
   
   font-family: $font-secondary;
   src: url("../assets/fonts/RobotoCondensed/RobotoCondensed-Bold.ttf") format('truetype'),
    url("../assets/fonts/RobotoCondensed/RobotoCondensed-BoldItalic.ttf") format('truetype'),
    url("../assets/fonts/RobotoCondensed/RobotoCondensed-Italic.ttf") format('truetype'),
    url("../assets/fonts/RobotoCondensed/RobotoCondensed-Light.ttf") format('truetype'),
    url("../assets/fonts/RobotoCondensed/RobotoCondensed-LightItalic.ttf") format('truetype'),
    url("../assets/fonts/RobotoCondensed/RobotoCondensed-Regular.ttf") format('truetype');
}




// BREAKPOINTS

$breakpoints: (
  'small':  767px,
  'medium': 992px,
  'large':  1200px
) !default;

/// Mixin to manage responsive breakpoints
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin breakpoint($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
  
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


body{
  background-color: #000001;
  height: 100vh;
}